## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#set( $isAuthorized = false )
#set( $primaryFieldMap = {} )
#if( $util.authType() == "Lambda Authorization" )

#end
#if( $util.authType() == "IAM Authorization" )
  #set( $adminRoles = ["us-east-2_vzZtdJ1AA_Full-access/CognitoIdentityCredentials","us-east-2_vzZtdJ1AA_Manage-only/CognitoIdentityCredentials","addUserToHouseHold-carlosdev","createNewHouseHold-carlosdev","graphQlLambdaAuthorizerc6ebb49e-carlosdev","largeproject9e7232c0PostConfirmation-carlosdev","appsynctest-carlosdev","arn:aws:iam::737064277081:role/amplify-amplifyee0a994c71-InitializeNewHouseHoldLa-1MVY2EBDXVKKM","arn:aws:iam::737064277081:user/admin-user","arn:aws:iam::737064277081:user/amplify-user","arn:aws:iam::737064277081:user/database-guy"] )
  #foreach( $adminRole in $adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #return($util.toJson({}))
    #end
  #end
  #if( !$isAuthorized )
    #if( ($ctx.identity.userArn == $ctx.stash.authRole) || ($ctx.identity.cognitoIdentityPoolId == "us-east-2:27ebb211-3b4a-4a96-b117-b23600ffe57e" && $ctx.identity.cognitoIdentityAuthType == "authenticated") )
      #set( $isAuthorized = true )
    #end
  #end
#end
#if( $util.authType() == "User Pool Authorization" )
  #set( $ownerClaim = $util.defaultIfNull($ctx.identity.claims.get("sub"), null) )
  #set( $currentClaim1 = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null)) )
  #if( !$util.isNull($ownerClaim) && !$util.isNull($currentClaim1) )
    #set( $ownerClaim = "$ownerClaim::$currentClaim1" )
    #set( $ownerClaimsList0 = [] )
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("sub"), null)))
    $util.qr($ownerClaimsList0.add($util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), null))))
    $util.qr($ownerClaimsList0.add($ownerClaim))
    #if( !$util.isNull($ctx.args.owner) )
      #if( $util.isString($ctx.args.owner) )
        #set( $ownerCondition = (($ownerClaim == $ctx.args.owner) || $ownerClaimsList0.contains($ctx.args.owner)) )
      #else
        #set( $ownerCondition = ($ownerClaim == $util.defaultIfNull($ctx.args.owner.get("eq"), null) || $ownerClaimsList0.contains($util.defaultIfNull($ctx.args.owner.get("eq"), null))) )
        #if( !$ownerCondition )
          #set( $entityValues = 0 )
          #foreach( $argEntity in $ctx.args.owner.get("eq") )
            #if( $ownerClaimsList0.contains($argEntity) )
              #set( $entityValues = $entityValues + 1 )
            #end
          #end
          #if( $entityValues == $ctx.args.owner.get("eq").size() )
            #set( $ownerCondition = true )
          #end
        #end
      #end
      #if( $ownerCondition )
        #set( $isAuthorized = true )
        $util.qr($ctx.stash.put("authFilter", null))
      #end
    #else
      $util.qr($primaryFieldMap.put("owner", $ownerClaimsList0))
    #end
  #end
  #if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) && !$primaryFieldMap.isEmpty() )
    #foreach( $entry in $primaryFieldMap.entrySet() )
      $util.qr($ctx.args.put($entry.key, $entry.value))
      #set( $isAuthorized = true )
    #end
  #end
#end
#if( !$isAuthorized && $util.isNull($ctx.stash.authFilter) )
$util.unauthorized()
#end
$util.toJson({"version":"2018-05-29","payload":{}})
## [End] Authorization Steps. **