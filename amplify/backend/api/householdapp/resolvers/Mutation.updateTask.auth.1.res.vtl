## [Start] Authorization Steps. **
$util.qr($ctx.stash.put("hasAuth", true))
#if( $ctx.error )
  $util.error($ctx.error.message, $ctx.error.type)
#end
#set( $inputFields = $util.parseJson($util.toJson($ctx.args.input.keySet())) )
#set( $isAuthorized = false )
#set( $allowedFields = [] )
#set( $nullAllowedFields = [] )
#set( $deniedFields = {} )
#if( $util.authType() == "Lambda Authorization" )
  #set( $isAuthorized = true )
#end
#if( $util.authType() == "IAM Authorization" )
  #set( $adminRoles = ["us-east-2_vzZtdJ1AA_Full-access/CognitoIdentityCredentials","us-east-2_vzZtdJ1AA_Manage-only/CognitoIdentityCredentials","addUserToHouseHold-carlosdev","createNewHouseHold-carlosdev","graphQlLambdaAuthorizerc6ebb49e-carlosdev","largeproject9e7232c0PostConfirmation-carlosdev","appsynctest-carlosdev","arn:aws:iam::737064277081:role/amplify-amplifyee0a994c71-InitializeNewHouseHoldLa-1MVY2EBDXVKKM","arn:aws:iam::737064277081:user/admin-user","arn:aws:iam::737064277081:user/amplify-user","arn:aws:iam::737064277081:user/database-guy"] )
  #foreach( $adminRole in $adminRoles )
    #if( $ctx.identity.userArn.contains($adminRole) && $ctx.identity.userArn != $ctx.stash.authRole && $ctx.identity.userArn != $ctx.stash.unauthRole )
      #return($util.toJson({}))
    #end
  #end
  #if( ($ctx.identity.userArn == $ctx.stash.authRole) || ($ctx.identity.cognitoIdentityPoolId == "us-east-2:27ebb211-3b4a-4a96-b117-b23600ffe57e" && $ctx.identity.cognitoIdentityAuthType == "authenticated") )
    #set( $isAuthorized = true )
  #end
#end
#if( $util.authType() == "User Pool Authorization" )

#end
#if( !$isAuthorized && $allowedFields.isEmpty() && $nullAllowedFields.isEmpty() )
$util.unauthorized()
#end
#if( !$isAuthorized )
  #foreach( $entry in $util.map.copyAndRetainAllKeys($ctx.args.input, $inputFields).entrySet() )
    #if( $util.isNull($entry.value) && !$nullAllowedFields.contains($entry.key) )
      $util.qr($deniedFields.put($entry.key, ""))
    #end
  #end
  #foreach( $deniedField in $util.list.copyAndRemoveAll($inputFields, $allowedFields) )
    $util.qr($deniedFields.put($deniedField, ""))
  #end
#end
#if( $deniedFields.keySet().size() > 0 )
  $util.error("Unauthorized on ${deniedFields.keySet()}", "Unauthorized")
#end
$util.toJson({})
## [End] Authorization Steps. **